import React, { useState } from "react";

// D·ªØ li·ªáu m·∫´u
const data = [
  {
    term: "Ng√†y ƒë·ªãa c·ª±c v√† ƒë√™m ƒë·ªãa c·ª±c",
    definition:
      "Hi·ªán t∆∞·ª£ng x·∫£y ra ·ªü c√°c v√πng vƒ© ƒë·ªô cao, khi M·∫∑t Tr·ªùi kh√¥ng l·∫∑n (ng√†y ƒë·ªãa c·ª±c) ho·∫∑c kh√¥ng m·ªçc (ƒë√™m ƒë·ªãa c·ª±c) trong 24 gi·ªù.",
    info: `S·ªë ng√†y to√†n ng√†y ch·ªâ x·∫£y ra trong m√πa n√≥ng ·ªü m·ªói b√°n c·∫ßu. 
B√°n c·∫ßu B·∫Øc c√≥ s·ªë ng√†y c√≥ 24 gi·ªù to√†n ng√†y (ng√†y ƒë·ªãa c·ª±c) nhi·ªÅu h∆°n ·ªü b√°n c·∫ßu Nam, 
v√¨ th·ªùi gian t·ª´ 21/3 ƒë·∫øn 23/9 d√†i h∆°n (186 ng√†y) do Tr√°i ƒê·∫•t di chuy·ªÉn ch·∫≠m h∆°n khi ·ªü ƒëi·ªÉm vi·ªÖn nh·∫≠t. 
Ng∆∞·ª£c l·∫°i, ·ªü b√°n c·∫ßu Nam, th·ªùi k√¨ n√≥ng ch·ªâ d√†i 179 ng√†y, n√™n s·ªë ng√†y to√†n ng√†y √≠t h∆°n v√† s·ªë ng√†y to√†n ƒë√™m nhi·ªÅu h∆°n (186 ng√†y).`,
    image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Polar_day_and_night.svg/800px-Polar_day_and_night.svg.png",
  },
  {
    term: "ƒê∆∞·ªùng ch√≠ tuy·∫øn",
    definition:
      "Hai ƒë∆∞·ªùng vƒ© tuy·∫øn gi·ªõi h·∫°n khu v·ª±c c√≥ hi·ªán t∆∞·ª£ng M·∫∑t Tr·ªùi l√™n thi√™n ƒë·ªânh m·ªôt l·∫ßn trong nƒÉm.",
    info: `ƒê∆∞·ªùng ch√≠ tuy·∫øn B·∫Øc n·∫±m ·ªü 23¬∞27'B (ch√≠ tuy·∫øn B·∫Øc) v√† ch√≠ tuy·∫øn Nam ·ªü 23¬∞27'N (ch√≠ tuy·∫øn Nam). 
Khu v·ª±c gi·ªØa hai ƒë∆∞·ªùng ch√≠ tuy·∫øn l√† v√πng n·ªôi ch√≠ tuy·∫øn ‚Äì n∆°i c√≥ nhi·ªát ƒë·ªô cao quanh nƒÉm v√† c√≥ th·ªÉ c√≥ hai l·∫ßn M·∫∑t Tr·ªùi l√™n thi√™n ƒë·ªânh.`,
    image: "https://upload.wikimedia.org/wikipedia/commons/4/4d/Tropic_of_Cancer_Tropic_of_Capricorn.png",
  },
  {
    term: "ƒê∆∞·ªùng x√≠ch ƒë·∫°o",
    definition:
      "ƒê∆∞·ªùng vƒ© tuy·∫øn l·ªõn nh·∫•t tr√™n Tr√°i ƒê·∫•t, chia ƒë·ªãa c·∫ßu th√†nh hai b√°n c·∫ßu B·∫Øc v√† Nam.",
    info: `ƒê∆∞·ªùng x√≠ch ƒë·∫°o c√≥ vƒ© ƒë·ªô 0¬∞, chi·ªÅu d√†i kho·∫£ng 40.075 km. 
N∆°i ƒë√¢y c√≥ nhi·ªát ƒë·ªô cao quanh nƒÉm, ƒë·ªô d√†i ng√†y v√† ƒë√™m g·∫ßn nh∆∞ b·∫±ng nhau.`,
    image: "https://upload.wikimedia.org/wikipedia/commons/0/08/Equator_map.png",
  },
];

function App() {
  const [search, setSearch] = useState("");
  const [selectedTerm, setSelectedTerm] = useState(null);

  const filtered = data.filter((item) =>
    item.term.toLowerCase().includes(search.toLowerCase())
  );

  const handleSelect = (term) => {
    setSelectedTerm(term);
    setSearch(term.term);
  };

  return (
    <div
      className="App"
      style={{
        minHeight: "100vh",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        background: "#f4f6f8",
        fontFamily: "sans-serif",
      }}
    >
      <div
        style={{
          background: "white",
          padding: "30px",
          borderRadius: "20px",
          boxShadow: "0 4px 15px rgba(0,0,0,0.1)",
          width: "90%",
          maxWidth: "600px",
          textAlign: "center",
        }}
      >
        <h1 style={{ color: "#1a56db", marginBottom: "20px" }}>
          üîç Tra c·ª©u thu·∫≠t ng·ªØ ƒê·ªãa l√≠
        </h1>

        {/* √î t√¨m ki·∫øm */}
        <div style={{ position: "relative" }}>
          <input
            type="text"
            placeholder="Nh·∫≠p thu·∫≠t ng·ªØ c·∫ßn t√¨m (v√≠ d·ª•: ch√≠ tuy·∫øn, ƒë·ªãa c·ª±c...)"
            value={search}
            onChange={(e) => {
              setSearch(e.target.value);
              setSelectedTerm(null);
            }}
            style={{
              padding: "10px",
              width: "100%",
              borderRadius: "8px",
              border: "1px solid #ccc",
              outline: "none",
              marginBottom: "10px",
            }}
          />

          {/* G·ª£i √Ω */}
          {search && !selectedTerm && filtered.length > 0 && (
            <ul
              style={{
                listStyle: "none",
                margin: 0,
                padding: "5px",
                background: "white",
                border: "1px solid #ccc",
                borderRadius: "8px",
                position: "absolute",
                top: "42px",
                width: "100%",
                textAlign: "left",
                zIndex: 10,
                maxHeight: "200px",
                overflowY: "auto",
              }}
            >
              {filtered.map((item, index) => (
                <li
                  key={index}
                  onClick={() => handleSelect(item)}
                  style={{
                    padding: "8px",
                    cursor: "pointer",
                    borderBottom: "1px solid #eee",
                  }}
                  onMouseOver={(e) =>
                    (e.target.style.background = "#f0f4ff")
                  }
                  onMouseOut={(e) => (e.target.style.background = "white")}
                >
                  {item.term}
                </li>
              ))}
            </ul>
          )}

          {/* Kh√¥ng t√¨m th·∫•y */}
          {search && filtered.length === 0 && !selectedTerm && (
            <div
              style={{
                background: "#fff",
                border: "1px solid #ccc",
                borderRadius: "8px",
                position: "absolute",
                top: "42px",
                width: "100%",
                padding: "10px",
                textAlign: "left",
                color: "#666",
              }}
            >
              ‚ùå Kh√¥ng t√¨m th·∫•y thu·∫≠t ng·ªØ ph√π h·ª£p.
            </div>
          )}
        </div>

        {/* Hi·ªÉn th·ªã k·∫øt qu·∫£ */}
        {selectedTerm && (
          <div style={{ textAlign: "left", marginTop: "20px" }}>
            <h2 style={{ color: "#333" }}>{selectedTerm.term}</h2>
            <p style={{ whiteSpace: "pre-line" }}>{selectedTerm.definition}</p>
            <p style={{ whiteSpace: "pre-line", color: "#555" }}>
              {selectedTerm.info}
            </p>
            {selectedTerm.image && (
              <div style={{ textAlign: "center", marginTop: "15px" }}>
                <img
                  src={selectedTerm.image}
                  alt={selectedTerm.term}
                  style={{
                    maxWidth: "100%",
                    borderRadius: "10px",
                    boxShadow: "0 2px 10px rgba(0,0,0,0.1)",
                  }}
                />
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
}

export default App;

import React, { useState } from "react";

// D·ªØ li·ªáu m·∫´u ƒë·ªÉ th·ª≠
const data = [
  {
    term: "Ng√†y ƒë·ªãa c·ª±c v√† ƒë√™m ƒë·ªãa c·ª±c",
    definition:
      "Hi·ªán t∆∞·ª£ng x·∫£y ra ·ªü c√°c v√πng vƒ© ƒë·ªô cao, khi M·∫∑t Tr·ªùi kh√¥ng l·∫∑n (ng√†y ƒë·ªãa c·ª±c) ho·∫∑c kh√¥ng m·ªçc (ƒë√™m ƒë·ªãa c·ª±c) trong 24 gi·ªù.",
    info: `S·ªë ng√†y to√†n ng√†y ch·ªâ x·∫£y ra trong m√πa n√≥ng ·ªü m·ªói b√°n c·∫ßu. 
B√°n c·∫ßu B·∫Øc c√≥ s·ªë ng√†y c√≥ 24 gi·ªù to√†n ng√†y (ng√†y ƒë·ªãa c·ª±c) nhi·ªÅu h∆°n ·ªü b√°n c·∫ßu Nam, 
v√¨ th·ªùi gian t·ª´ 21/3 ƒë·∫øn 23/9 d√†i h∆°n (186 ng√†y) do Tr√°i ƒê·∫•t di chuy·ªÉn ch·∫≠m h∆°n khi ·ªü ƒëi·ªÉm vi·ªÖn nh·∫≠t. 
Ng∆∞·ª£c l·∫°i, ·ªü b√°n c·∫ßu Nam, th·ªùi k√¨ n√≥ng ch·ªâ d√†i 179 ng√†y, n√™n s·ªë ng√†y to√†n ng√†y √≠t h∆°n v√† s·ªë ng√†y to√†n ƒë√™m nhi·ªÅu h∆°n (186 ng√†y).`,
    image: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Polar_day_and_night.svg/800px-Polar_day_and_night.svg.png",
  },
  {
    term: "ƒê∆∞·ªùng ch√≠ tuy·∫øn",
    definition:
      "L√† hai ƒë∆∞·ªùng vƒ© tuy·∫øn gi·ªõi h·∫°n khu v·ª±c c√≥ hi·ªán t∆∞·ª£ng M·∫∑t Tr·ªùi l√™n thi√™n ƒë·ªânh m·ªôt l·∫ßn trong nƒÉm.",
    info: `ƒê∆∞·ªùng ch√≠ tuy·∫øn B·∫Øc n·∫±m ·ªü 23¬∞27'B (ch√≠ tuy·∫øn B·∫Øc) v√† ƒë∆∞·ªùng ch√≠ tuy·∫øn Nam ·ªü 23¬∞27'N (ch√≠ tuy·∫øn Nam). 
Khu v·ª±c gi·ªØa hai ƒë∆∞·ªùng ch√≠ tuy·∫øn l√† v√πng n·ªôi ch√≠ tuy·∫øn ‚Äì n∆°i c√≥ nhi·ªát ƒë·ªô cao quanh nƒÉm v√† c√≥ th·ªÉ c√≥ hai l·∫ßn M·∫∑t Tr·ªùi l√™n thi√™n ƒë·ªânh.`,
    image: "https://upload.wikimedia.org/wikipedia/commons/4/4d/Tropic_of_Cancer_Tropic_of_Capricorn.png",
  },
];

function App() {
  const [term, setTerm] = useState("");
  const [result, setResult] = useState(null);

  const handleSearch = () => {
    const found = data.find((item) =>
      item.term.toLowerCase().includes(term.toLowerCase())
    );
    setResult(found || null);
  };

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <div className="max-w-3xl mx-auto bg-white rounded-2xl shadow-xl p-6">
        <h1 className="text-2xl font-bold mb-4 text-center text-blue-700">
          üîç Tra c·ª©u thu·∫≠t ng·ªØ ƒê·ªãa l√≠
        </h1>

        {/* √î t√¨m ki·∫øm */}
        <div className="flex gap-2 mb-4">
          <input
            value={term}
            onChange={(e) => setTerm(e.target.value)}
            placeholder="Nh·∫≠p thu·∫≠t ng·ªØ c·∫ßn t√¨m (v√≠ d·ª•: ng√†y ƒë·ªãa c·ª±c)..."
            className="flex-1 border rounded-lg px-3 py-2 outline-none focus:ring-2 focus:ring-blue-400"
          />
          <button
            onClick={handleSearch}
            className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700"
          >
            T√¨m
          </button>
        </div>

        {/* Hi·ªÉn th·ªã k·∫øt qu·∫£ */}
        {result ? (
          <div className="mt-6 space-y-4 animate-fadeIn">
            <div className="border-b pb-2">
              <h2 className="text-xl font-semibold text-gray-800">
                {result.term}
              </h2>
              <p className="text-gray-700 whitespace-pre-line mt-1">
                {result.definition}
              </p>
            </div>

            {result.info && (
              <div>
                <h3 className="font-medium text-gray-800 mb-2">
                  Th√¥ng tin chi ti·∫øt:
                </h3>
                <p className="text-gray-600 whitespace-pre-line">
                  {result.info}
                </p>
              </div>
            )}

            {result.image && (
              <div className="flex justify-center mt-4">
                <img
                  src={result.image}
                  alt={result.term}
                  className="max-h-64 rounded-xl shadow-lg"
                />
              </div>
            )}
          </div>
        ) : term ? (
          <p className="text-center text-gray-500 mt-6">
            ‚ùå Kh√¥ng t√¨m th·∫•y thu·∫≠t ng·ªØ ph√π h·ª£p.
          </p>
        ) : null}
      </div>
    </div>
  );
}

export default App;

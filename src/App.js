import React, { useState } from "react";

// ==== D·ªÆ LI·ªÜU M·∫™U CHO 4 CH·ª¶ ƒê·ªÄ ====
const data = {
  "T·ª± nhi√™n": [
    {
      term: "Ng√†y ƒë·ªãa c·ª±c v√† ƒë√™m ƒë·ªãa c·ª±c",
      definition:
        "Hi·ªán t∆∞·ª£ng x·∫£y ra ·ªü c√°c v√πng vƒ© ƒë·ªô cao, khi M·∫∑t Tr·ªùi kh√¥ng l·∫∑n (ng√†y ƒë·ªãa c·ª±c) ho·∫∑c kh√¥ng m·ªçc (ƒë√™m ƒë·ªãa c·ª±c) trong 24 gi·ªù.",
      info: `S·ªë ng√†y to√†n ng√†y ch·ªâ x·∫£y ra trong m√πa n√≥ng ·ªü m·ªói b√°n c·∫ßu. 
B√°n c·∫ßu B·∫Øc c√≥ s·ªë ng√†y to√†n ng√†y nhi·ªÅu h∆°n b√°n c·∫ßu Nam v√¨ th·ªùi gian t·ª´ 21/3‚Äì23/9 d√†i h∆°n (186 ng√†y) do Tr√°i ƒê·∫•t di chuy·ªÉn ch·∫≠m h∆°n ·ªü ƒëi·ªÉm vi·ªÖn nh·∫≠t. 
Ng∆∞·ª£c l·∫°i, ·ªü b√°n c·∫ßu Nam th·ªùi k√¨ n√≥ng ch·ªâ 179 ng√†y n√™n s·ªë ng√†y to√†n ng√†y √≠t h∆°n v√† s·ªë ng√†y to√†n ƒë√™m nhi·ªÅu h∆°n (186 ng√†y).`,
      image:
        "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Polar_day_and_night.svg/800px-Polar_day_and_night.svg.png",
    },
    {
      term: "ƒê∆∞·ªùng x√≠ch ƒë·∫°o",
      definition:
        "ƒê∆∞·ªùng vƒ© tuy·∫øn l·ªõn nh·∫•t tr√™n Tr√°i ƒê·∫•t, chia ƒë·ªãa c·∫ßu th√†nh hai b√°n c·∫ßu B·∫Øc v√† Nam.",
      info: `ƒê∆∞·ªùng x√≠ch ƒë·∫°o c√≥ vƒ© ƒë·ªô 0¬∞, chi·ªÅu d√†i kho·∫£ng 40.075 km. 
N∆°i ƒë√¢y c√≥ nhi·ªát ƒë·ªô cao quanh nƒÉm, ƒë·ªô d√†i ng√†y v√† ƒë√™m g·∫ßn nh∆∞ b·∫±ng nhau.`,
      image: "https://upload.wikimedia.org/wikipedia/commons/0/08/Equator_map.png",
    },
    {
      term: "ƒê∆∞·ªùng ch√≠ tuy·∫øn",
      definition:
        "Hai ƒë∆∞·ªùng vƒ© tuy·∫øn gi·ªõi h·∫°n khu v·ª±c c√≥ hi·ªán t∆∞·ª£ng M·∫∑t Tr·ªùi l√™n thi√™n ƒë·ªânh m·ªôt l·∫ßn trong nƒÉm.",
      info: `Ch√≠ tuy·∫øn B·∫Øc n·∫±m ·ªü 23¬∞27'B v√† ch√≠ tuy·∫øn Nam ·ªü 23¬∞27'N. 
Khu v·ª±c gi·ªØa hai ch√≠ tuy·∫øn l√† v√πng n·ªôi ch√≠ tuy·∫øn ‚Äì n∆°i c√≥ th·ªÉ c√≥ hai l·∫ßn M·∫∑t Tr·ªùi l√™n thi√™n ƒë·ªânh.`,
      image:
        "https://upload.wikimedia.org/wikipedia/commons/4/4d/Tropic_of_Cancer_Tropic_of_Capricorn.png",
    },
  ],

  "D√¢n c∆∞": [
    {
      term: "M·∫≠t ƒë·ªô d√¢n s·ªë",
      definition: "S·ªë d√¢n trung b√¨nh sinh s·ªëng tr√™n m·ªôt ƒë∆°n v·ªã di·ªán t√≠ch (ng∆∞·ªùi/km¬≤).",
      info: `M·∫≠t ƒë·ªô d√¢n s·ªë ph·∫£n √°nh m·ª©c ƒë·ªô t·∫≠p trung d√¢n c∆∞, l√† ch·ªâ ti√™u quan tr·ªçng trong quy ho·∫°ch ph√°t tri·ªÉn kinh t·∫ø ‚Äì x√£ h·ªôi.`,
      image: "https://upload.wikimedia.org/wikipedia/commons/5/5e/World_population_density_map.PNG",
    },
    {
      term: "Gia tƒÉng d√¢n s·ªë t·ª± nhi√™n",
      definition: "S·ª± ch√™nh l·ªách gi·ªØa t·ªâ su·∫•t sinh v√† t·ªâ su·∫•t t·ª≠ trong m·ªôt giai ƒëo·∫°n.",
      info: `Gia tƒÉng d√¢n s·ªë t·ª± nhi√™n = T·ªâ su·∫•t sinh - T·ªâ su·∫•t t·ª≠. 
Ch·ªâ s·ªë n√†y d∆∞∆°ng ‚Üí d√¢n s·ªë tƒÉng; √¢m ‚Üí d√¢n s·ªë gi·∫£m.`,
      image: "https://upload.wikimedia.org/wikipedia/commons/2/2c/Birth_rate_world_map.PNG",
    },
  ],

  "Kinh t·∫ø": [
    {
      term: "C√¥ng nghi·ªáp h√≥a",
      definition:
        "Qu√° tr√¨nh chuy·ªÉn ƒë·ªïi n·ªÅn kinh t·∫ø t·ª´ d·ª±a ch·ªß y·∫øu v√†o n√¥ng nghi·ªáp sang c√¥ng nghi·ªáp v√† d·ªãch v·ª•.",
      info: `C√¥ng nghi·ªáp h√≥a g·∫Øn li·ªÅn v·ªõi hi·ªán ƒë·∫°i h√≥a, ƒë√≤i h·ªèi ƒë·∫ßu t∆∞ l·ªõn v·ªÅ c∆° s·ªü h·∫° t·∫ßng, khoa h·ªçc ‚Äì c√¥ng ngh·ªá.`,
      image: "https://upload.wikimedia.org/wikipedia/commons/b/b8/Industrial_Revolution.jpg",
    },
    {
      term: "Kinh t·∫ø tri th·ª©c",
      definition:
        "N·ªÅn kinh t·∫ø d·ª±a ch·ªß y·∫øu v√†o tri th·ª©c, khoa h·ªçc ‚Äì c√¥ng ngh·ªá v√† s√°ng t·∫°o.",
      info: `V√≠ d·ª•: Nh·∫≠t B·∫£n, Hoa K·ª≥, H√†n Qu·ªëc l√† c√°c n∆∞·ªõc ƒëi·ªÉn h√¨nh c·ªßa kinh t·∫ø tri th·ª©c, trong ƒë√≥ t·ªâ tr·ªçng ng√†nh d·ªãch v·ª• v√† c√¥ng ngh·ªá cao chi·∫øm tr√™n 70% GDP.`,
      image: "https://upload.wikimedia.org/wikipedia/commons/3/31/Innovation_economy.jpg",
    },
  ],

  "M√¥i tr∆∞·ªùng": [
    {
      term: "√î nhi·ªÖm m√¥i tr∆∞·ªùng",
      definition:
        "S·ª± thay ƒë·ªïi c√°c y·∫øu t·ªë t·ª± nhi√™n khi·∫øn m√¥i tr∆∞·ªùng tr·ªü n√™n ƒë·ªôc h·∫°i ƒë·ªëi v·ªõi con ng∆∞·ªùi v√† sinh v·∫≠t.",
      info: `C√°c d·∫°ng √¥ nhi·ªÖm ph·ªï bi·∫øn: kh√¥ng kh√≠, n∆∞·ªõc, ƒë·∫•t, ti·∫øng ·ªìn, √°nh s√°ng. 
Nguy√™n nh√¢n ch·ªß y·∫øu l√† do ho·∫°t ƒë·ªông c√¥ng nghi·ªáp, giao th√¥ng v√† ƒë√¥ th·ªã h√≥a.`,
      image: "https://upload.wikimedia.org/wikipedia/commons/8/88/Air_pollution.jpg",
    },
    {
      term: "Bi·∫øn ƒë·ªïi kh√≠ h·∫≠u",
      definition:
        "S·ª± thay ƒë·ªïi d√†i h·∫°n v·ªÅ nhi·ªát ƒë·ªô, l∆∞·ª£ng m∆∞a v√† c√°c y·∫øu t·ªë kh√≠ h·∫≠u kh√°c c·ªßa Tr√°i ƒê·∫•t.",
      info: `Nguy√™n nh√¢n ch√≠nh l√† do hi·ªáu ·ª©ng nh√† k√≠nh gia tƒÉng. 
H·∫≠u qu·∫£: bƒÉng tan, m·ª±c n∆∞·ªõc bi·ªÉn d√¢ng, th·ªùi ti·∫øt c·ª±c ƒëoan.`,
      image: "https://upload.wikimedia.org/wikipedia/commons/8/8a/Climate_change.jpg",
    },
  ],
};

function App() {
  const [topic, setTopic] = useState("T·ª± nhi√™n");
  const [search, setSearch] = useState("");
  const [selectedTerm, setSelectedTerm] = useState(null);

  const terms = data[topic];
  const filtered = terms.filter((item) =>
    item.term.toLowerCase().includes(search.toLowerCase())
  );

  const handleSelect = (term) => {
    setSelectedTerm(term);
    setSearch(term.term);
  };

  return (
    <div
      style={{
        minHeight: "100vh",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        background: "#eef3f8",
        fontFamily: "Segoe UI, sans-serif",
      }}
    >
      <div
        style={{
          background: "white",
          padding: "30px",
          borderRadius: "20px",
          boxShadow: "0 4px 20px rgba(0,0,0,0.1)",
          width: "90%",
          maxWidth: "700px",
          textAlign: "center",
        }}
      >
        <h1 style={{ color: "#1a56db", marginBottom: "20px" }}>
          üîç Tra c·ª©u thu·∫≠t ng·ªØ ƒê·ªãa l√≠
        </h1>

        {/* Ch·ªçn ch·ªß ƒë·ªÅ */}
        <select
          value={topic}
          onChange={(e) => {
            setTopic(e.target.value);
            setSelectedTerm(null);
            setSearch("");
          }}
          style={{
            padding: "10px",
            width: "100%",
            borderRadius: "8px",
            border: "1px solid #ccc",
            marginBottom: "15px",
            fontSize: "15px",
          }}
        >
          {Object.keys(data).map((key) => (
            <option key={key}>{key}</option>
          ))}
        </select>

        {/* √î t√¨m ki·∫øm */}
        <div style={{ position: "relative" }}>
          <input
            type="text"
            placeholder={`T√¨m thu·∫≠t ng·ªØ trong ch·ªß ƒë·ªÅ ${topic.toLowerCase()}...`}
            value={search}
            onChange={(e) => {
              setSearch(e.target.value);
              setSelectedTerm(null);
            }}
            style={{
              padding: "10px",
              width: "100%",
              borderRadius: "8px",
              border: "1px solid #ccc",
              outline: "none",
              marginBottom: "10px",
            }}
          />

          {/* G·ª£i √Ω */}
          {search && !selectedTerm && filtered.length > 0 && (
            <ul
              style={{
                listStyle: "none",
                margin: 0,
                padding: "5px",
                background: "white",
                border: "1px solid #ccc",
                borderRadius: "8px",
                position: "absolute",
                top: "42px",
                width: "100%",
                textAlign: "left",
                zIndex: 10,
                maxHeight: "200px",
                overflowY: "auto",
              }}
            >
              {filtered.map((item, index) => (
                <li
                  key={index}
                  onClick={() => handleSelect(item)}
                  style={{
                    padding: "8px",
                    cursor: "pointer",
                    borderBottom: "1px solid #eee",
                  }}
                  onMouseOver={(e) =>
                    (e.target.style.background = "#f0f4ff")
                  }
                  onMouseOut={(e) => (e.target.style.background = "white")}
                >
                  {item.term}
                </li>
              ))}
            </ul>
          )}

          {/* Kh√¥ng t√¨m th·∫•y */}
          {search && filtered.length === 0 && !selectedTerm && (
            <div
              style={{
                background: "#fff",
                border: "1px solid #ccc",
                borderRadius: "8px",
                position: "absolute",
                top: "42px",
                width: "100%",
                padding: "10px",
                textAlign: "left",
                color: "#666",
              }}
            >
              ‚ùå Kh√¥ng t√¨m th·∫•y thu·∫≠t ng·ªØ ph√π h·ª£p.
            </div>
          )}
        </div>

        {/* K·∫øt qu·∫£ hi·ªÉn th·ªã */}
        {selectedTerm && (
          <div style={{ textAlign: "left", marginTop: "20px" }}>
            <h2 style={{ color: "#333" }}>{selectedTerm.term}</h2>
            <p style={{ whiteSpace: "pre-line" }}>{selectedTerm.definition}</p>
            <p style={{ whiteSpace: "pre-line", color: "#555" }}>
              {selectedTerm.info}
            </p>
            {selectedTerm.image && (
              <div style={{ textAlign: "center", marginTop: "15px" }}>
                <img
                  src={selectedTerm.image}
                  alt={selectedTerm.term}
                  style={{
                    maxWidth: "100%",
                    borderRadius: "10px",
                    boxShadow: "0 2px 10px rgba(0,0,0,0.1)",
                  }}
                />
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
}

export default App;
